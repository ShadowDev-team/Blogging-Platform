<section class="post-details-area">
    <div class="container container-1000">
        <div class="post-details">
            <div class="entry-header">
                <h2 class="title"> <%= article.title %></h2>
                <ul class="post-meta">
                    <li><%= article.createdAt %></li>
                    <li><a href="#">Design,</a><a href="#">Travel,</a><a href="#">photography</a></li>
                </ul>
                <p class="short-desc">
                    <%= article.description%>
                </p>
            </div>
            <div class="entry-media text-center">
                <img src="<%= article.image ? '/uploads/'+article.image : 'assets/img/posts/01.jpg' %>" alt="Image">
            </div>
            <div class="entry-content">
                <p class="has-dropcap">
                    <%- article.content %>
                </p>
            </div>
            <div class="entry-footer">
                <div class="post-tags">
                    <span>Tag:</span>
                    <a href="#">burger,</a>
                    <a href="#">pixxa,</a>
                    <a href="#">drink,</a>
                    <a href="#">hot,</a>
                    <a href="#">spacial,</a>
                </div>
                <div class="social-share">
                    <span>Share:</span>
                    <a href="#"><i class="fab fa-instagram"></i></a>
                    <a href="#"><i class="fas fa-heart"></i></a>
                    <a href="#"><i class="fab fa-facebook-f"></i></a>
                    <a href="#"><i class="fab fa-twitter"></i></a>
                </div>
                <div class="post-author">
                    <div class="author-img">
                        <img src="<%= article.author.profilePicture ? '/uploads/'+article.author.profilePicture : '/assets/img/post-details/profile-default.jpg' %>" alt="PostAuthor">
                    </div>
                    <h5><a href="#"><%= article.author.username %></a></h5>
                    <p> <%= article.author.bio %></p>
                </div>
            </div>


        </div>
        <div class="comment-template">
            <h4 class="template-title">04 Comments</h4>

            <!-- Comments Section -->
            <div class="comments-section">
                <h4 class="comments-title">Comments</h4>
                <div id="comments-container">
                    <!-- Comments will be appended here by JavaScript -->
                </div>
            </div>

            <!-- New comment form -->
            <div class="comment-form">
                <h4>Leave a Comment</h4>
                <form id="comment-form">
                    <textarea id="comment-content" rows="4" placeholder="Enter your comment"></textarea>
                    <button type="submit">Comment</button>
                </form>
            </div>
        </div>
    </div>
</section>

<!-- Script to fetch and display comments -->
<script>
    document.addEventListener('DOMContentLoaded', function() {


// Split the path by '/' and get the ID (assuming it's the last part)
        const articleId = window.location.pathname.split('/').pop();
        const commentsContainer = document.getElementById('comments-container');
        const commentForm = document.getElementById('comment-form');

        // Fetch comments for the article
        function fetchComments() {
            fetch(`/api/articles/${articleId}/comments`)
                .then(response => response.json())
                .then(comments => {
                    commentsContainer.innerHTML = ''; // Clear previous comments

                    if (comments.length === 0) {
                        commentsContainer.innerHTML = '<p>No comments yet.</p>';
                    } else {
                        comments.forEach(comment => {
                            const commentElement = document.createElement('div');
                            commentElement.classList.add('comment');
                            commentElement.innerHTML = `
                                <p><strong>User ${comment.user_id}:</strong> ${comment.content}</p>
                                <p><small>${new Date(comment.createdAt).toLocaleString()}</small></p>
                                <hr>
                            `;
                            commentsContainer.appendChild(commentElement);
                        });
                    }
                })
                .catch(error => {
                    console.error('Error fetching comments:', error);
                    commentsContainer.innerHTML = '<p>Failed to load comments.</p>';
                });
        }

        // Fetch comments when the page loads
        fetchComments();

        // Handle comment form submission
        commentForm.addEventListener('submit', function(event) {
            event.preventDefault();

            const content = document.getElementById('comment-content').value;

            fetch(`/api/comments`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    content: content,
                    article_id: articleId
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.message === 'Comment created successfully') {
                    fetchComments(); // Refresh the comments after adding a new one
                    document.getElementById('comment-content').value = ''; // Clear the input
                } else {
                    alert('Failed to add comment: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error submitting comment:', error);
            });
        });
    });
</script>
