<section class="post-details-area">
    <div class="container container-1000">
        <div class="post-details">
            <div class="entry-header">
                <h2 class="title"> <%= article.title %></h2>
                <ul class="post-meta">
                    <li><%= article.createdAt %></li>
                    <li><a href="#">Design,</a><a href="#">Travel,</a><a href="#">photography</a></li>
                </ul>
                <p class="short-desc">
                    <%= article.description%>
                </p>
            </div>
            <div class="entry-media text-center">
                <img src="<%= article.image ? '/uploads/'+article.image : '/assets/img/post-details/01.jpg' %>" alt="Image">
            </div>
            <div class="entry-content">
                <p class="has-dropcap">
                    <%- article.content %>
                </p>
            </div>
            <div class="entry-footer">
                <div class="post-tags">
                    <span>Tag:</span>
                    <a href="#">burger,</a>
                    <a href="#">pixxa,</a>
                    <a href="#">drink,</a>
                    <a href="#">hot,</a>
                    <a href="#">spacial,</a>
                </div>
                <div class="social-share">
                    <span>Share:</span>
                    <a href="#"><i class="fab fa-instagram"></i></a>
                    <a href="#"><i class="fas fa-heart"></i></a>
                    <a href="#"><i class="fab fa-facebook-f"></i></a>
                    <a href="#"><i class="fab fa-twitter"></i></a>
                </div>
                <div class="post-author">
                    <div class="author-img">
                        <img src="<%= article.author.profilePicture ? '/uploads/'+article.author.profilePicture : '/assets/img/post-details/profile-default.jpg' %>" alt="PostAuthor">
                    </div>
                    <h5><a href="#"><%= article.author.username %></a></h5>
                    <p> <%= article.author.bio %></p>
                </div>
            </div>


        </div>
        <div class="comment-template">
            <h4 class="template-title"><span id="comment-count"></span> Commentaire</h4>
            <!-- Comments Section -->
            <div class="comments-section">
                <div id="comments-container">
                    <!-- Comments will be appended here by JavaScript -->
                </div>
                <p class="d-inline-flex gap-1">
                    <h1 id="toggle-comments" class="btn mb-4"></h1>
                </p>
            </div>
        
            <!-- New comment form -->
            <div class="comment-form">
                <h3>Laisser un commentaire</h3>
                <form id="comment-form">
                    <textarea id="comment-content" rows="4" placeholder="Enter your comment"></textarea>
                    <button type="submit">Commentaire</button>
                </form>
            </div>
        </div>
        
        <!-- Script to fetch and display comments -->
        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const articleId = window.location.pathname.split('/').pop();
                const commentsContainer = document.getElementById('comments-container');
                const commentForm = document.getElementById('comment-form');
                const commentCountElement = document.getElementById('comment-count');
                const toggleCommentsButton = document.getElementById('toggle-comments');
        
                let comments = [];
                let isExpanded = false; // Track the state of comments visibility
        
                // Fetch comments for the article
                function fetchComments() {
                    fetch(`/api/articles/${articleId}/comments`)
                        .then(response => response.json())
                        .then(fetchedComments => {
                            comments = fetchedComments; // Store fetched comments
                            displayComments(); // Initially display limited comments
                            commentCountElement.textContent = comments.length; // Update comment count
                        })
                        .catch(error => {
                            console.error('Error fetching comments:', error);
                            commentsContainer.innerHTML = '<p>Failed to load comments.</p>';
                        });
                }
        
                // Display limited or all comments based on isExpanded state
                function displayComments() {
                    commentsContainer.innerHTML = ''; // Clear previous comments
                    const commentsToShow = isExpanded ? comments : comments.slice(0, 3); // Show all or just 3
        
                    if (commentsToShow.length === 0) {
                        commentsContainer.innerHTML = '<p>No comments yet.</p>';
                    } else {
                        commentsToShow.forEach(comment => {
                            const commentElement = document.createElement('div');
                            commentElement.classList.add('comment');
                            commentElement.innerHTML = `
                                <p><strong>${comment.author ? comment.author.username : 'Anonymous'}:</strong> ${comment.content}</p>
                                <p><small>${new Date(comment.createdAt).toLocaleString()}</small></p>
                                <hr>
                            `;
                            commentsContainer.appendChild(commentElement);
                        });
                    }
        
                    // Update button text based on whether comments are expanded or collapsed
                    toggleCommentsButton.textContent = isExpanded ? 'Read Less' : 'Read More';
                    toggleCommentsButton.style.display = comments.length > 3 ? 'inline-block' : 'none'; // Hide button if fewer than 4 comments
                }
        
                // Handle comment form submission
                commentForm.addEventListener('submit', function (event) {
                    event.preventDefault();
                    const content = document.getElementById('comment-content').value;
        
                    // Send the new comment to the backend
                    fetch(`/api/comments`, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({
                            content: content,
                            article_id: articleId
                        })
                    })
                        .then(response => response.json())
                        .then(data => {
                            if (data.message === 'Comment created successfully') {
                                
                                // Push the new comment into the comments array
                                comments.push({
                                    author: { username: data.comment.author.username}, // Replace with the actual current user's username
                                    content: data.comment.content,
                                    createdAt: data.comment.createdAt
                                });
        
                                displayComments(); // Re-render the comments
                                document.getElementById('comment-content').value = ''; // Clear input field
                                commentCountElement.textContent = comments.length; // Update the comment count
                            } else {
                                window.location.href="/login";
                            }
                        })
                        .catch(error => {
                            console.error('Error submitting comment:', error);
                        });
                });
        
                // Toggle comments visibility on button click
                toggleCommentsButton.addEventListener('click', function () {
                    isExpanded = !isExpanded; // Toggle the state
                    displayComments(); // Refresh comments based on new state
                });
        
                // Fetch and display comments when the page loads
                fetchComments();
            });
        </script>
        