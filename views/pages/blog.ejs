<section class="post-details-area">
    <div class="container container-1000">
        <div class="post-details">
            <div class="entry-header">
                <h2 class="title"> <%= article.title %></h2>
                <ul class="post-meta">
                    <li><%= article.createdAt %></li>
                    <li><a href="#">Design,</a><a href="#">Travel,</a><a href="#">photography</a></li>
                </ul>
                <p class="short-desc">
                    <%= article.description%>
                </p>
            </div>
            <div class="entry-media text-center">
                <img src="<%= article.image ? '/uploads/'+article.image : '/assets/img/post-details/01.jpg' %>" alt="Image">
            </div>
            <div class="entry-content">
                <p class="has-dropcap">
                    <%- article.content %>
                </p>
            </div>
            <div class="entry-footer">
                <div class="post-tags">
                    <span>Tag:</span>
                    <a href="#">burger,</a>
                    <a href="#">pixxa,</a>
                    <a href="#">drink,</a>
                    <a href="#">hot,</a>
                    <a href="#">spacial,</a>
                </div>
                <div class="social-share">
                    <span>Share:</span>
                    <a href="#"><i class="fab fa-instagram"></i></a>
                    <a href="#"><i class="fas fa-heart"></i></a>
                    <a href="#"><i class="fab fa-facebook-f"></i></a>
                    <a href="#"><i class="fab fa-twitter"></i></a>
                </div>
                <div class="post-author">
                    <div class="author-img">
                        <img src="<%= article.author.profilePicture ? '/uploads/'+article.author.profilePicture : '/assets/img/post-details/profile-default.jpg' %>" alt="PostAuthor">
                    </div>
                    <h5><a href="#"><%= article.author.username %></a></h5>
                    <p> <%= article.author.bio %></p>
                </div>
            </div>


        </div>
        <div class="comment-template">
            <h4 class="template-title"><span id="comment-count"></span> Commentaire</h4>

            <div class="comments-section">
                <div id="comments-container">
                  
                </div>
                <p class="d-inline-flex gap-1">
                    <h1 id="toggle-comments" class="btn mb-4"></h1>
                </p>
            </div>
        
          
            <div class="comment-form">
                <h3>Laisser un commentaire</h3>
                <form id="comment-form">
                    <textarea id="comment-content" rows="4" placeholder="Enter your comment"></textarea>
                    <button type="submit">Commentaire</button>
                </form>
            </div>
        </div>

        
        

        <script>
            document.addEventListener('DOMContentLoaded', function () {
                const articleId = window.location.pathname.split('/').pop();
                const commentsContainer = document.getElementById('comments-container');
                const commentForm = document.getElementById('comment-form');
                const commentCountElement = document.getElementById('comment-count');
                const toggleCommentsButton = document.getElementById('toggle-comments');
        
                let comments = [];
                let isExpanded = false; 
        
      
                function fetchComments() {
                    fetch(`/api/articles/${articleId}/comments`)
                        .then(response => response.json())
                        .then(fetchedComments => {
                            comments = fetchedComments;
                            displayComments();
                            commentCountElement.textContent = comments.length; 
                        })
                        .catch(error => {
                            console.error('Error fetching comments:', error);
                            commentsContainer.innerHTML = '<p>Failed to load comments.</p>';
                        });
                }
        
            
                function displayComments() {
                    commentsContainer.innerHTML = '';
                    const commentsToShow = isExpanded ? comments : comments.slice(0, 3); 
        
                    if (commentsToShow.length === 0) {
                        commentsContainer.innerHTML = '<p>No comments yet.</p>';
                    } else {
                        commentsToShow.forEach(comment => {
                            const commentElement = document.createElement('div');
                            commentElement.classList.add('comment');
                            commentElement.innerHTML = `
                                <p><strong>${comment.author ? comment.author.username : 'unknown'}:</strong> ${comment.content}</p>
                                <p><small>${new Date(comment.createdAt).toLocaleString()}</small></p>
                                <hr>
                            `;
                            commentsContainer.appendChild(commentElement);
                        });
                    }
        
       
                    toggleCommentsButton.textContent = isExpanded ? 'Read Less' : 'Read More';
                    toggleCommentsButton.style.display = comments.length > 3 ? 'inline-block' : 'none'; 
                }
        
   
                commentForm.addEventListener('submit', async function (event) {
    event.preventDefault();
    const content = document.getElementById('comment-content').value;

    try {
        const response = await fetch(`/api/comments`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                content: content,
                article_id: articleId
            })
        });
        const data = await response.json();

            if (response.status === 201) {
                comments.push({
                    author: { username: data.comment.author.username },
                    content: data.comment.content,
                    createdAt: data.comment.createdAt
                });

                displayComments();
                document.getElementById('comment-content').value = ''; 
                commentCountElement.textContent = comments.length; 
            } else if (response.status === 400) {
                alert(data.message);
            } else {
                window.location.href = "/login";
            }
            } catch (error) {
                console.error('Error submitting comment:', error);
            }
        });
    
            toggleCommentsButton.addEventListener('click', function () {
                    isExpanded = !isExpanded; 
                    displayComments(); 
                });
                fetchComments();
            });
        </script>
        